18.12.18

Прочитал небольшую книгу по синтаксису python.
Почитал про нормализацию.
Подобрал модули, которые могут и вероятно пригодятся:
	-numpy ( Библиотека NumPy предоставляет реализации вычислительных алгоритмов (в виде функций и операторов), оптимизированные для работы с многомерными массивами. В результате любой алгоритм, который может быть выражен в виде последовательности операций над массивами (матрицами) и реализованный с использованием NumPy, работает так же быстро, как эквивалентный код, выполняемый в MATLAB)
	-sklearn (является бесплатной библиотекой машинного обучения для языка программирования Python. Имеет различные алгоритмы классификации, регрессии и кластеризации. И предназначен для взаимодействия с числовыми и научными библиотеками Python NumPy и SciPy. )
	-skipy (библиотека для языка программирования Python с открытым исходным кодом, предназначенная для выполнения научных и инженерных расчётов.)
	-pandas (Пакет прежде всего предназначен для очистки и первичной оценки данных по общим показателям, например среднему значению, квантилям и так далее; статистическим пакетом он в полном смысле не является, однако наборы данных типов DataFrame и Series применяются в качестве входных в большинстве модулей анализа данных и машинного обучения (SciPy, Scikit-Learn[en] и других).)
_____________________________________________________
_____________________________________________________
29.01.2019

	Реализован класс, при инициализации которого задается структура сети, загружается из файла data.csv выборка примеров и размерность получившейся матрицы.

	Реализована функция нормализации, по умолчанию линейна, можно задать нелинейную нормализацию и параметр a (по умолчанию a = 1)

_____________________________________________________
_____________________________________________________
04.02.2019

	Добавил метод self_learning() k=4, v=0.3, m=0.05, count=6, где k - количество нейронов, v - cкорость обучения, m - параметр уменьшения скорости обучение с каждой эпохой, count - количество эпох
